
#version 450

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D inBloomTexture;
layout(binding = 1) uniform sampler2D inSceneTexture;
layout(binding = 2, rgba32f) uniform writeonly image2D outTexture;

layout(push_constant) uniform constants
{
	vec2 bloomData; // x: bloom intensity, y: bloom mix percentage
} data;

void main()
{
	ivec2 outImageSize = imageSize(outTexture);
    vec2 uv = gl_GlobalInvocationID.xy / vec2(outImageSize);
    
    vec3 bloomSample = texture(inBloomTexture, uv).rgb * data.bloomData.x;
    vec3 sceneSample = texture(inSceneTexture, uv).rgb;

    vec3 finalColor = mix(sceneSample, bloomSample, data.bloomData.y);
	imageStore(outTexture, ivec2(gl_GlobalInvocationID.xy), vec4(finalColor, 1.0));
}